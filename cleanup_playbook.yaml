- name: Clean up and delete AWS resources
  hosts: localhost
  gather_facts: no
  vars:
    region: us-east-1
    vpc_name: MyVPC
    instance_name: MyInstance
    security_group_name: MySecurityGroup

  tasks:
    - name: Find the EC2 instance
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "{{ instance_name }}"
        region: "{{ region }}"
      register: ec2_info
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Terminate the EC2 instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ ec2_info.instances[0].instance_id }}"
        state: absent
        region: "{{ region }}"
      when: ec2_info.instances | length > 0
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Find the security group
      amazon.aws.ec2_group_info:
        filters:
          "tag:Name": "{{ security_group_name }}"
        region: "{{ region }}"
      register: sg_info
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Delete the security group
      amazon.aws.ec2_group:
        group_id: "{{ sg_info.security_groups[0].group_id }}"
        state: absent
        region: "{{ region }}"
      when: sg_info.security_groups | length > 0
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Find the subnet
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          "vpc-id": "{{ my_vpc.vpc.id }}"
        region: "{{ region }}"
      register: subnet_info
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Delete the subnet
      amazon.aws.ec2_vpc_subnet:
        state: absent
        subnet_id: "{{ subnet_info.subnets[0].id }}"
        region: "{{ region }}"
      when: subnet_info.subnets | length > 0
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Find the internet gateway
      amazon.aws.ec2_vpc_igw_info:
        filters:
          "attachment.vpc-id": "{{ my_vpc.vpc.id }}"
        region: "{{ region }}"
      register: igw_info
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Detach and delete the internet gateway
      amazon.aws.ec2_vpc_igw:
        igw_id: "{{ igw_info.internet_gateways[0].id }}"
        vpc_id: "{{ my_vpc.vpc.id }}"
        state: absent
        region: "{{ region }}"
      when: igw_info.internet_gateways | length > 0
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Find the VPC
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": "{{ vpc_name }}"
        region: "{{ region }}"
      register: vpc_info
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

    - name: Delete the VPC
      amazon.aws.ec2_vpc_net:
        state: absent
        vpc_id: "{{ vpc_info.vpcs[0].id }}"
        region: "{{ region }}"
      when: vpc_info.vpcs | length > 0
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"